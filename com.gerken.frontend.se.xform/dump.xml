<?xml version="1.0" encoding="utf-8"?>
<root>
   <editor id="com.gerken.test.first" name="First Try" extension="ft" provider="Chris Gerken" editorProjectName="com.gerken.test.first" editorPackage="com.gerken.test.first.editor" editorDir="com/gerken/test/first/editor" basePackage="com.gerken.test.first" baseDir="com/gerken/test/first" domainPackage="com.gerken.test.first.domain" domainDir="com/gerken/test/first/domain" constraintPackage="com.gerken.test.first.constraint" constraintDir="com/gerken/test/first/constraint" indexPackage="com.gerken.test.first.index" indexDir="com/gerken/test/first/index" shinglesPackage="com.gerken.test.first.shingles" shinglesDir="com/gerken/test/first/shingles" maxLevel="4">
	   <type name="root" nounPhrase="Overview" indexLabel="{@name}" shingleLabel="Overview" validatorClass="RootConstraintValidator" indexClass="RootIndex" shingleClass="RootShingle" shingleGetterMethod="getRootShingle" indexVar="index_root" indexGetterMethod="getRootIndex" shingleVar="shingleRoot" level="0">
	       <field name="name" label="Editor Name" kind="text" widgetVar="text_name" listenerClass="TextNameListener" domainVar="domain_name">
	           <constraint kind="required"/>
	       </field> 
	       <field name="id" label="Plugin ID" kind="text" widgetVar="text_id" listenerClass="TextIdListener" domainVar="domain_id">
	           <constraint kind="required"/>
	           <constraint kind="java.package"/>
	       </field>
	       <field name="extension" label="File Extension" kind="text" widgetVar="text_extension" listenerClass="TextExtensionListener" domainVar="domain_extension">
	           <constraint kind="required"/>
	           <constraint kind="name"/>
	       </field>
	       <field name="provider" label="Provider" kind="text" widgetVar="text_provider" listenerClass="TextProviderListener" domainVar="domain_provider">
	           <constraint kind="required"/>
	       </field>
	   </type>
	   <type name="type" parent="root" nounPhrase="model type" indexLabel="{@name}" shingleLabel="Model Types" validatorClass="TypeConstraintValidator" indexClass="TypeIndex" shingleClass="TypeShingle" shingleGetterMethod="getTypeShingle" indexVar="index_type" indexGetterMethod="getTypeIndex" shingleVar="shingleType" level="1">
	       <field name="name" label="Type Name" kind="text" widgetVar="text_name" listenerClass="TextNameListener" domainVar="domain_name">
	           <constraint kind="required"/>
	           <constraint kind="name"/>
	           <constraint kind="unique" levels="1"/>
	       </field>
	       <field name="parent" label="Contained By" kind="combo" domain="parents" widgetVar="text_parent" listenerClass="ComboParentListener" domainVar="domain_parent">
	           <constraint kind="required"/>
	       </field>
	       <field name="nounPhrase" label="Noun Phrase" kind="text" widgetVar="text_nounPhrase" listenerClass="TextNounPhraseListener" domainVar="domain_nounPhrase">
	           <constraint kind="required"/>
	       </field>
	       <field name="indexLabel" label="Index Label" kind="text" widgetVar="text_indexLabel" listenerClass="TextIndexLabelListener" domainVar="domain_indexLabel">
	           <constraint kind="required"/>
	       </field>
	       <field name="shingleLabel" label="Shingle Label" kind="text" widgetVar="text_shingleLabel" listenerClass="TextShingleLabelListener" domainVar="domain_shingleLabel">
	           <constraint kind="required"/>
	       </field>
	   </type>
	   <type name="field" parent="type" nounPhrase="attribute" indexLabel="{@name}" shingleLabel="Attributes" validatorClass="FieldConstraintValidator" indexClass="FieldIndex" shingleClass="FieldShingle" shingleGetterMethod="getFieldShingle" indexVar="index_field" indexGetterMethod="getFieldIndex" shingleVar="shingleField" level="2">
	       <field name="name" label="Attribute Name" kind="text" widgetVar="text_name" listenerClass="TextNameListener" domainVar="domain_name">
	           <constraint kind="required"/>
	           <constraint kind="name"/>
	       </field>
	       <field name="label" label="UI Label" kind="text" widgetVar="text_label" listenerClass="TextLabelListener" domainVar="domain_label">
	           <constraint kind="required"/>
	       </field>
	       <field name="kind" label="Kind" kind="combo" domain="kinds" widgetVar="text_kind" listenerClass="ComboKindListener" domainVar="domain_kind">
	           <constraint kind="required"/>
	       </field>
	       <field name="text" label="Check Button Text" kind="text" widgetVar="text_text" listenerClass="TextTextListener" domainVar="domain_text">
	       </field>
	       <field name="domain" label="Combo Domain" kind="combo" domain="domains" widgetVar="text_domain" listenerClass="ComboDomainListener" domainVar="domain_domain">
	       </field>
	   </type>
	   <type name="constraint" parent="field" nounPhrase="constraint" indexLabel="{@kind}" shingleLabel="Constraints" validatorClass="ConstraintConstraintValidator" indexClass="ConstraintIndex" shingleClass="ConstraintShingle" shingleGetterMethod="getConstraintShingle" indexVar="index_constraint" indexGetterMethod="getConstraintIndex" shingleVar="shingleConstraint" level="3">
	       <field name="kind" label="kind" kind="combo" domain="constraints" widgetVar="text_kind" listenerClass="ComboKindListener" domainVar="domain_kind">
	           <constraint kind="required"/>
	       </field>
	   </type>
	   <type name="domain" parent="root" nounPhrase="domain" indexLabel="{@name}" shingleLabel="Domains" validatorClass="DomainConstraintValidator" indexClass="DomainIndex" shingleClass="DomainShingle" shingleGetterMethod="getDomainShingle" indexVar="index_domain" indexGetterMethod="getDomainIndex" shingleVar="shingleDomain" level="1">
	       <field name="name" label="Domain Name" kind="text" widgetVar="text_name" listenerClass="TextNameListener" domainVar="domain_name">
	           <constraint kind="required"/>
	           <constraint kind="name"/>
	       </field>
	   </type>
	   <type name="value" parent="domain" nounPhrase="name/value pair" indexLabel="{@displayText}" shingleLabel="Domain Values" validatorClass="ValueConstraintValidator" indexClass="ValueIndex" shingleClass="ValueShingle" shingleGetterMethod="getValueShingle" indexVar="index_value" indexGetterMethod="getValueIndex" shingleVar="shingleValue" level="2">
	       <field name="displayText" label="Display Text" kind="text" widgetVar="text_displayText" listenerClass="TextDisplayTextListener" domainVar="domain_displayText">
	           <constraint kind="required"/>
	       </field>
	       <field name="key" label="Key" kind="text" widgetVar="text_key" listenerClass="TextKeyListener" domainVar="domain_key">
	           <constraint kind="required"/>
	       </field>
	   </type>
	   <type name="pattern" parent="root" nounPhrase="invokable pattern" indexLabel="{@id}" shingleLabel="Available Patterns" validatorClass="PatternConstraintValidator" indexClass="PatternIndex" shingleClass="PatternShingle" shingleGetterMethod="getPatternShingle" indexVar="index_pattern" indexGetterMethod="getPatternIndex" shingleVar="shinglePattern" level="1">
	       <field name="id" label="id" kind="text" widgetVar="text_id" listenerClass="TextIdListener" domainVar="domain_id">
	           <constraint kind="required"/>
	           <constraint kind="java.package"/>
	       </field>
	       <field name="desc" label="What Gets Generated" kind="text" widgetVar="text_desc" listenerClass="TextDescListener" domainVar="domain_desc">
	           <constraint kind="required"/>
	       </field>
	   </type>
	   <domain name="parents" domainClass="ParentsDomain">
	        <query desc="Parents" fromRoot="false" queryExpression="../type" keyExpression="@name" valueExpression="@name"/>
	   </domain>
	   <domain name="domains" domainClass="DomainsDomain">
	        <query desc="Domains" fromRoot="false" queryExpression="../domain" keyExpression="@name" valueExpression="@name"/>
	   </domain>
	   <domain name="constraints" domainClass="ConstraintsDomain">
	   	  <value key="required" displayText="Must be entered"/>
	   	  <value key="name" displayText="No embedded whitespace"/>
	   	  <value key="java.package" displayText="Java package name"/>
	   	  <value key="integer" displayText="Numeric"/>
	   </domain>
	   <domain name="kinds" domainClass="KindsDomain">
	   	  <value key="text" displayText="Text"/>
	   	  <value key="checkbox" displayText="True/False"/>
	   	  <value key="combo" displayText="Combo"/>
	   </domain>
	   <pattern id="x.x.x" desc="model dump"/>
   </editor>
</root>
